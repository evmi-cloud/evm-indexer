// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: evm_indexer/v1/evm_indexer.proto

package evm_indexerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogSource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type               string               `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Contracts          []*LogSourceContract `protobuf:"bytes,3,rep,name=contracts,proto3" json:"contracts,omitempty"`
	Topic              string               `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	StartBlock         uint64               `protobuf:"varint,5,opt,name=start_block,json=startBlock,proto3" json:"start_block,omitempty"`
	LatestBlockIndexed uint64               `protobuf:"varint,6,opt,name=latest_block_indexed,json=latestBlockIndexed,proto3" json:"latest_block_indexed,omitempty"`
}

func (x *LogSource) Reset() {
	*x = LogSource{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSource) ProtoMessage() {}

func (x *LogSource) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSource.ProtoReflect.Descriptor instead.
func (*LogSource) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{0}
}

func (x *LogSource) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LogSource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LogSource) GetContracts() []*LogSourceContract {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *LogSource) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *LogSource) GetStartBlock() uint64 {
	if x != nil {
		return x.StartBlock
	}
	return 0
}

func (x *LogSource) GetLatestBlockIndexed() uint64 {
	if x != nil {
		return x.LatestBlockIndexed
	}
	return 0
}

type LogSourceContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address      string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ContractName string `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
}

func (x *LogSourceContract) Reset() {
	*x = LogSourceContract{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSourceContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSourceContract) ProtoMessage() {}

func (x *LogSourceContract) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSourceContract.ProtoReflect.Descriptor instead.
func (*LogSourceContract) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{1}
}

func (x *LogSourceContract) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *LogSourceContract) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

type LogStoreStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status             string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	LatestBlockIndexed uint64 `protobuf:"varint,2,opt,name=latest_block_indexed,json=latestBlockIndexed,proto3" json:"latest_block_indexed,omitempty"`
}

func (x *LogStoreStatus) Reset() {
	*x = LogStoreStatus{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogStoreStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStoreStatus) ProtoMessage() {}

func (x *LogStoreStatus) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStoreStatus.ProtoReflect.Descriptor instead.
func (*LogStoreStatus) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{2}
}

func (x *LogStoreStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LogStoreStatus) GetLatestBlockIndexed() uint64 {
	if x != nil {
		return x.LatestBlockIndexed
	}
	return 0
}

type EvmMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractName string            `protobuf:"bytes,1,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	EventName    string            `protobuf:"bytes,2,opt,name=event_name,json=eventName,proto3" json:"event_name,omitempty"`
	FunctionName string            `protobuf:"bytes,3,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	Data         map[string]string `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *EvmMetadata) Reset() {
	*x = EvmMetadata{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvmMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmMetadata) ProtoMessage() {}

func (x *EvmMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmMetadata.ProtoReflect.Descriptor instead.
func (*EvmMetadata) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{3}
}

func (x *EvmMetadata) GetContractName() string {
	if x != nil {
		return x.ContractName
	}
	return ""
}

func (x *EvmMetadata) GetEventName() string {
	if x != nil {
		return x.EventName
	}
	return ""
}

func (x *EvmMetadata) GetFunctionName() string {
	if x != nil {
		return x.FunctionName
	}
	return ""
}

func (x *EvmMetadata) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type EvmLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          string       `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Topics           []string     `protobuf:"bytes,2,rep,name=topics,proto3" json:"topics,omitempty"`
	Data             string       `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	BlockNumber      uint64       `protobuf:"varint,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	TransactionHash  string       `protobuf:"bytes,5,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	TransactionIndex uint64       `protobuf:"varint,6,opt,name=transaction_index,json=transactionIndex,proto3" json:"transaction_index,omitempty"`
	BlockHash        string       `protobuf:"bytes,7,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	LogIndex         uint64       `protobuf:"varint,8,opt,name=log_index,json=logIndex,proto3" json:"log_index,omitempty"`
	Removed          bool         `protobuf:"varint,9,opt,name=removed,proto3" json:"removed,omitempty"`
	MintedAt         uint64       `protobuf:"varint,10,opt,name=minted_at,json=mintedAt,proto3" json:"minted_at,omitempty"`
	Metadata         *EvmMetadata `protobuf:"bytes,11,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
}

func (x *EvmLog) Reset() {
	*x = EvmLog{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvmLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvmLog) ProtoMessage() {}

func (x *EvmLog) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvmLog.ProtoReflect.Descriptor instead.
func (*EvmLog) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{4}
}

func (x *EvmLog) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EvmLog) GetTopics() []string {
	if x != nil {
		return x.Topics
	}
	return nil
}

func (x *EvmLog) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *EvmLog) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *EvmLog) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *EvmLog) GetTransactionIndex() uint64 {
	if x != nil {
		return x.TransactionIndex
	}
	return 0
}

func (x *EvmLog) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *EvmLog) GetLogIndex() uint64 {
	if x != nil {
		return x.LogIndex
	}
	return 0
}

func (x *EvmLog) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

func (x *EvmLog) GetMintedAt() uint64 {
	if x != nil {
		return x.MintedAt
	}
	return 0
}

func (x *EvmLog) GetMetadata() *EvmMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type LogStore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Identifier  string       `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Description string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	RpcUrl      string       `protobuf:"bytes,5,opt,name=rpc_url,json=rpcUrl,proto3" json:"rpc_url,omitempty"`
	Status      string       `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	ChainId     uint64       `protobuf:"varint,7,opt,name=chainId,proto3" json:"chainId,omitempty"`
	Sources     []*LogSource `protobuf:"bytes,8,rep,name=sources,proto3" json:"sources,omitempty"`
}

func (x *LogStore) Reset() {
	*x = LogStore{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogStore) ProtoMessage() {}

func (x *LogStore) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogStore.ProtoReflect.Descriptor instead.
func (*LogStore) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{5}
}

func (x *LogStore) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogStore) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *LogStore) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LogStore) GetRpcUrl() string {
	if x != nil {
		return x.RpcUrl
	}
	return ""
}

func (x *LogStore) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LogStore) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *LogStore) GetSources() []*LogSource {
	if x != nil {
		return x.Sources
	}
	return nil
}

type GetStoresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetStoresRequest) Reset() {
	*x = GetStoresRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoresRequest) ProtoMessage() {}

func (x *GetStoresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoresRequest.ProtoReflect.Descriptor instead.
func (*GetStoresRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{6}
}

type GetStoresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool        `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Stores  []*LogStore `protobuf:"bytes,3,rep,name=stores,proto3" json:"stores,omitempty"`
}

func (x *GetStoresResponse) Reset() {
	*x = GetStoresResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoresResponse) ProtoMessage() {}

func (x *GetStoresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoresResponse.ProtoReflect.Descriptor instead.
func (*GetStoresResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{7}
}

func (x *GetStoresResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetStoresResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetStoresResponse) GetStores() []*LogStore {
	if x != nil {
		return x.Stores
	}
	return nil
}

type StartPipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StartPipelineRequest) Reset() {
	*x = StartPipelineRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPipelineRequest) ProtoMessage() {}

func (x *StartPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPipelineRequest.ProtoReflect.Descriptor instead.
func (*StartPipelineRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{8}
}

func (x *StartPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartPipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StartPipelineResponse) Reset() {
	*x = StartPipelineResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPipelineResponse) ProtoMessage() {}

func (x *StartPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPipelineResponse.ProtoReflect.Descriptor instead.
func (*StartPipelineResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{9}
}

func (x *StartPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartPipelineResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StopPipelineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopPipelineRequest) Reset() {
	*x = StopPipelineRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineRequest) ProtoMessage() {}

func (x *StopPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineRequest.ProtoReflect.Descriptor instead.
func (*StopPipelineRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{10}
}

func (x *StopPipelineRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StopPipelineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StopPipelineResponse) Reset() {
	*x = StopPipelineResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineResponse) ProtoMessage() {}

func (x *StopPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineResponse.ProtoReflect.Descriptor instead.
func (*StopPipelineResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{11}
}

func (x *StopPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopPipelineResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetStoreLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromBlock uint64 `protobuf:"varint,2,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"`
	ToBlock   uint64 `protobuf:"varint,3,opt,name=to_block,json=toBlock,proto3" json:"to_block,omitempty"`
	Limit     uint64 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset    uint64 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *GetStoreLogsRequest) Reset() {
	*x = GetStoreLogsRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreLogsRequest) ProtoMessage() {}

func (x *GetStoreLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreLogsRequest.ProtoReflect.Descriptor instead.
func (*GetStoreLogsRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{12}
}

func (x *GetStoreLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetStoreLogsRequest) GetFromBlock() uint64 {
	if x != nil {
		return x.FromBlock
	}
	return 0
}

func (x *GetStoreLogsRequest) GetToBlock() uint64 {
	if x != nil {
		return x.ToBlock
	}
	return 0
}

func (x *GetStoreLogsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetStoreLogsRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type GetStoreLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Logs    []*EvmLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetStoreLogsResponse) Reset() {
	*x = GetStoreLogsResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreLogsResponse) ProtoMessage() {}

func (x *GetStoreLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreLogsResponse.ProtoReflect.Descriptor instead.
func (*GetStoreLogsResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{13}
}

func (x *GetStoreLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetStoreLogsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetStoreLogsResponse) GetLogs() []*EvmLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type GetLatestStoreLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Limit uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetLatestStoreLogsRequest) Reset() {
	*x = GetLatestStoreLogsRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestStoreLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestStoreLogsRequest) ProtoMessage() {}

func (x *GetLatestStoreLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestStoreLogsRequest.ProtoReflect.Descriptor instead.
func (*GetLatestStoreLogsRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{14}
}

func (x *GetLatestStoreLogsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetLatestStoreLogsRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetLatestStoreLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool      `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string    `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Logs    []*EvmLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetLatestStoreLogsResponse) Reset() {
	*x = GetLatestStoreLogsResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestStoreLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestStoreLogsResponse) ProtoMessage() {}

func (x *GetLatestStoreLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestStoreLogsResponse.ProtoReflect.Descriptor instead.
func (*GetLatestStoreLogsResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{15}
}

func (x *GetLatestStoreLogsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetLatestStoreLogsResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *GetLatestStoreLogsResponse) GetLogs() []*EvmLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type GetStoreLogsStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromBlock uint64 `protobuf:"varint,2,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"`
	ToLatest  bool   `protobuf:"varint,3,opt,name=to_latest,json=toLatest,proto3" json:"to_latest,omitempty"`
	ToBlock   uint64 `protobuf:"varint,4,opt,name=to_block,json=toBlock,proto3" json:"to_block,omitempty"`
	BatchSize uint64 `protobuf:"varint,5,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
}

func (x *GetStoreLogsStreamRequest) Reset() {
	*x = GetStoreLogsStreamRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreLogsStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreLogsStreamRequest) ProtoMessage() {}

func (x *GetStoreLogsStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreLogsStreamRequest.ProtoReflect.Descriptor instead.
func (*GetStoreLogsStreamRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{16}
}

func (x *GetStoreLogsStreamRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetStoreLogsStreamRequest) GetFromBlock() uint64 {
	if x != nil {
		return x.FromBlock
	}
	return 0
}

func (x *GetStoreLogsStreamRequest) GetToLatest() bool {
	if x != nil {
		return x.ToLatest
	}
	return false
}

func (x *GetStoreLogsStreamRequest) GetToBlock() uint64 {
	if x != nil {
		return x.ToBlock
	}
	return 0
}

func (x *GetStoreLogsStreamRequest) GetBatchSize() uint64 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

type GetStoreLogsStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logs []*EvmLog `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
}

func (x *GetStoreLogsStreamResponse) Reset() {
	*x = GetStoreLogsStreamResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStoreLogsStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreLogsStreamResponse) ProtoMessage() {}

func (x *GetStoreLogsStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreLogsStreamResponse.ProtoReflect.Descriptor instead.
func (*GetStoreLogsStreamResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{17}
}

func (x *GetStoreLogsStreamResponse) GetLogs() []*EvmLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

type RefetchPipelineBlockRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FromBlock uint64 `protobuf:"varint,2,opt,name=from_block,json=fromBlock,proto3" json:"from_block,omitempty"`
}

func (x *RefetchPipelineBlockRangeRequest) Reset() {
	*x = RefetchPipelineBlockRangeRequest{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefetchPipelineBlockRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefetchPipelineBlockRangeRequest) ProtoMessage() {}

func (x *RefetchPipelineBlockRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefetchPipelineBlockRangeRequest.ProtoReflect.Descriptor instead.
func (*RefetchPipelineBlockRangeRequest) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{18}
}

func (x *RefetchPipelineBlockRangeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RefetchPipelineBlockRangeRequest) GetFromBlock() uint64 {
	if x != nil {
		return x.FromBlock
	}
	return 0
}

type RefetchPipelineBlockRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RefetchPipelineBlockRangeResponse) Reset() {
	*x = RefetchPipelineBlockRangeResponse{}
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefetchPipelineBlockRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefetchPipelineBlockRangeResponse) ProtoMessage() {}

func (x *RefetchPipelineBlockRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_evm_indexer_v1_evm_indexer_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefetchPipelineBlockRangeResponse.ProtoReflect.Descriptor instead.
func (*RefetchPipelineBlockRangeResponse) Descriptor() ([]byte, []int) {
	return file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP(), []int{19}
}

func (x *RefetchPipelineBlockRangeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RefetchPipelineBlockRangeResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_evm_indexer_v1_evm_indexer_proto protoreflect.FileDescriptor

var file_evm_indexer_v1_evm_indexer_proto_rawDesc = []byte{
	0x0a, 0x20, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x76,
	0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70,
	0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x64, 0x22, 0x52, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x0e, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x12,
	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x0b, 0x45, 0x76, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x76, 0x6d, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x87, 0x03, 0x0a, 0x06, 0x45, 0x76, 0x6d, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b,
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c,
	0x6f, 0x67, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x76, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdc, 0x01, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x70, 0x63, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x70, 0x63, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x12, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x73, 0x22, 0x26, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x15, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x14, 0x53,
	0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x6f,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x22, 0x72, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x6c,
	0x6f, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6d, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x4c, 0x6f,
	0x67, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0x41, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x78, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x6f, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x48, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x6d, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x73, 0x22, 0x51, 0x0a, 0x20, 0x52, 0x65, 0x66, 0x65, 0x74, 0x63, 0x68, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x53, 0x0a, 0x21, 0x52, 0x65, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe1, 0x04, 0x0a, 0x11, 0x45,
	0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x52, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x20, 0x2e,
	0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x21, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5e, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x65, 0x76,
	0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x76, 0x6d, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x23, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x73, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x29, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x29, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67,
	0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0xef,
	0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x45, 0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x73, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x75, 0x72, 0x70, 0x68, 0x79, 0x2d, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x76, 0x6d,
	0x2d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x2f, 0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b,
	0x65, 0x76, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x45, 0x58, 0x58, 0xaa, 0x02, 0x0d, 0x45, 0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x0d, 0x45, 0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x19, 0x45, 0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72,
	0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0e, 0x45, 0x76, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x72, 0x3a, 0x3a, 0x56, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_evm_indexer_v1_evm_indexer_proto_rawDescOnce sync.Once
	file_evm_indexer_v1_evm_indexer_proto_rawDescData = file_evm_indexer_v1_evm_indexer_proto_rawDesc
)

func file_evm_indexer_v1_evm_indexer_proto_rawDescGZIP() []byte {
	file_evm_indexer_v1_evm_indexer_proto_rawDescOnce.Do(func() {
		file_evm_indexer_v1_evm_indexer_proto_rawDescData = protoimpl.X.CompressGZIP(file_evm_indexer_v1_evm_indexer_proto_rawDescData)
	})
	return file_evm_indexer_v1_evm_indexer_proto_rawDescData
}

var file_evm_indexer_v1_evm_indexer_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_evm_indexer_v1_evm_indexer_proto_goTypes = []any{
	(*LogSource)(nil),                         // 0: evm_indexer.v1.LogSource
	(*LogSourceContract)(nil),                 // 1: evm_indexer.v1.LogSourceContract
	(*LogStoreStatus)(nil),                    // 2: evm_indexer.v1.LogStoreStatus
	(*EvmMetadata)(nil),                       // 3: evm_indexer.v1.EvmMetadata
	(*EvmLog)(nil),                            // 4: evm_indexer.v1.EvmLog
	(*LogStore)(nil),                          // 5: evm_indexer.v1.LogStore
	(*GetStoresRequest)(nil),                  // 6: evm_indexer.v1.GetStoresRequest
	(*GetStoresResponse)(nil),                 // 7: evm_indexer.v1.GetStoresResponse
	(*StartPipelineRequest)(nil),              // 8: evm_indexer.v1.StartPipelineRequest
	(*StartPipelineResponse)(nil),             // 9: evm_indexer.v1.StartPipelineResponse
	(*StopPipelineRequest)(nil),               // 10: evm_indexer.v1.StopPipelineRequest
	(*StopPipelineResponse)(nil),              // 11: evm_indexer.v1.StopPipelineResponse
	(*GetStoreLogsRequest)(nil),               // 12: evm_indexer.v1.GetStoreLogsRequest
	(*GetStoreLogsResponse)(nil),              // 13: evm_indexer.v1.GetStoreLogsResponse
	(*GetLatestStoreLogsRequest)(nil),         // 14: evm_indexer.v1.GetLatestStoreLogsRequest
	(*GetLatestStoreLogsResponse)(nil),        // 15: evm_indexer.v1.GetLatestStoreLogsResponse
	(*GetStoreLogsStreamRequest)(nil),         // 16: evm_indexer.v1.GetStoreLogsStreamRequest
	(*GetStoreLogsStreamResponse)(nil),        // 17: evm_indexer.v1.GetStoreLogsStreamResponse
	(*RefetchPipelineBlockRangeRequest)(nil),  // 18: evm_indexer.v1.RefetchPipelineBlockRangeRequest
	(*RefetchPipelineBlockRangeResponse)(nil), // 19: evm_indexer.v1.RefetchPipelineBlockRangeResponse
	nil, // 20: evm_indexer.v1.EvmMetadata.DataEntry
}
var file_evm_indexer_v1_evm_indexer_proto_depIdxs = []int32{
	1,  // 0: evm_indexer.v1.LogSource.contracts:type_name -> evm_indexer.v1.LogSourceContract
	20, // 1: evm_indexer.v1.EvmMetadata.data:type_name -> evm_indexer.v1.EvmMetadata.DataEntry
	3,  // 2: evm_indexer.v1.EvmLog.metadata:type_name -> evm_indexer.v1.EvmMetadata
	0,  // 3: evm_indexer.v1.LogStore.sources:type_name -> evm_indexer.v1.LogSource
	5,  // 4: evm_indexer.v1.GetStoresResponse.stores:type_name -> evm_indexer.v1.LogStore
	4,  // 5: evm_indexer.v1.GetStoreLogsResponse.logs:type_name -> evm_indexer.v1.EvmLog
	4,  // 6: evm_indexer.v1.GetLatestStoreLogsResponse.logs:type_name -> evm_indexer.v1.EvmLog
	4,  // 7: evm_indexer.v1.GetStoreLogsStreamResponse.logs:type_name -> evm_indexer.v1.EvmLog
	6,  // 8: evm_indexer.v1.EvmIndexerService.GetStores:input_type -> evm_indexer.v1.GetStoresRequest
	8,  // 9: evm_indexer.v1.EvmIndexerService.StartPipeline:input_type -> evm_indexer.v1.StartPipelineRequest
	10, // 10: evm_indexer.v1.EvmIndexerService.StopPipeline:input_type -> evm_indexer.v1.StopPipelineRequest
	12, // 11: evm_indexer.v1.EvmIndexerService.GetStoreLogs:input_type -> evm_indexer.v1.GetStoreLogsRequest
	14, // 12: evm_indexer.v1.EvmIndexerService.GetLatestsStoreLogs:input_type -> evm_indexer.v1.GetLatestStoreLogsRequest
	16, // 13: evm_indexer.v1.EvmIndexerService.GetStoreLogStream:input_type -> evm_indexer.v1.GetStoreLogsStreamRequest
	7,  // 14: evm_indexer.v1.EvmIndexerService.GetStores:output_type -> evm_indexer.v1.GetStoresResponse
	9,  // 15: evm_indexer.v1.EvmIndexerService.StartPipeline:output_type -> evm_indexer.v1.StartPipelineResponse
	11, // 16: evm_indexer.v1.EvmIndexerService.StopPipeline:output_type -> evm_indexer.v1.StopPipelineResponse
	13, // 17: evm_indexer.v1.EvmIndexerService.GetStoreLogs:output_type -> evm_indexer.v1.GetStoreLogsResponse
	15, // 18: evm_indexer.v1.EvmIndexerService.GetLatestsStoreLogs:output_type -> evm_indexer.v1.GetLatestStoreLogsResponse
	17, // 19: evm_indexer.v1.EvmIndexerService.GetStoreLogStream:output_type -> evm_indexer.v1.GetStoreLogsStreamResponse
	14, // [14:20] is the sub-list for method output_type
	8,  // [8:14] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_evm_indexer_v1_evm_indexer_proto_init() }
func file_evm_indexer_v1_evm_indexer_proto_init() {
	if File_evm_indexer_v1_evm_indexer_proto != nil {
		return
	}
	file_evm_indexer_v1_evm_indexer_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_evm_indexer_v1_evm_indexer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_evm_indexer_v1_evm_indexer_proto_goTypes,
		DependencyIndexes: file_evm_indexer_v1_evm_indexer_proto_depIdxs,
		MessageInfos:      file_evm_indexer_v1_evm_indexer_proto_msgTypes,
	}.Build()
	File_evm_indexer_v1_evm_indexer_proto = out.File
	file_evm_indexer_v1_evm_indexer_proto_rawDesc = nil
	file_evm_indexer_v1_evm_indexer_proto_goTypes = nil
	file_evm_indexer_v1_evm_indexer_proto_depIdxs = nil
}
